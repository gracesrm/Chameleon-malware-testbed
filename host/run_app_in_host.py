### Usage:

# python run_app_in_host.py test_case_file cnt vmPath(the shared virtual machine name)

# e.g. # python run_app_in_host apps/example.txt 1 'Chameleon.vmx'	


## example.txt Format

# (test case cmd),(program name),(log file prefix name)



import os,sys,time
from datetime import datetime as datetime

vm_user = '' 
vm_pass = ''
snapshot=''   # snapshot name of the virtual machine

hostIP = '' # the IP of the host
host_user = ''
host_pass = ''

# conf_noWait = ' -noWait -activeWindow -interactive '  #active is not supported for linux
conf_noWait = ' -noWait '
conf_noWin = ' -noWait -interactive '
conf_noInter = ' -noWait -activeWindow '
conf = ' -activeWindow -interactive '


def runProgramInVM(proc, conf):		
	cmd = 'vmrun -T ws-shared -h ' + hostIP + ' -u ' + host_user + ' -p ' + host_pass + ' -gu '+ vm_user + ' -gp ' + vm_pass + ' runProgramInGuest "[ha-datacenter/standard] ' + vmPath + '" ' + conf + proc
	print cmd
	ret = os.system(cmd)
	return True if ret == 0 else False

def revert2snapshot():
	cmd1 = 'vmrun -T ws-shared -h ' + hostIP + ' -u ' + host_user + ' -p ' + host_pass + ' revertToSnapshot "[ha-datacenter/standard] ' + vmPath + '" ' + snapshot
	cmd2 = 'vmrun -T ws-shared -h ' + hostIP + ' -u ' + host_user + ' -p ' + host_pass + ' start "[ha-datacenter/standard] ' + vmPath + '"'
	ret = os.system(cmd1)
	print '------- reverting to snapshot ------'	
	time.sleep(5)
	ret = os.system(cmd2)
	time.sleep(2)

def copyFromGuestToHost(src, dest):
	cmd = 'vmrun -T ws-shared -h ' + hostIP + ' -u ' + host_user + ' -p ' + host_pass + ' -gu '+ vm_user + ' -gp ' + vm_pass + ' copyFileFromGuestToHost "[ha-datacenter/standard] ' + vmPath + '" ' + src + ' ' + dest
	os.system(cmd)
	time.sleep(2)


def copyResultToHost(logPath, i, program):
	src_perf = logPath+ '.perf'
        logPath = logPath + '.tr'
	dest_tr = '$HOME/HostLog/' + program + '_' + str(i) + '.tr'
	dest_perf = dest_tr[:-2] + 'perf'
	print logPath
	copyFromGuestToHost(logPath, dest_tr, vmPath)
	print dest_tr
	print src_perf
	copyFromGuestToHost(src_perf, dest_perf, vmPath)
	print dest_perf


def Start(testCases, cnt, vmPath):

	with open(testCases,'r+') as tf:
		for tf_line in tf:
                        blocks = tf_line.strip().split(',')			
                        case = blocks[0]
                        program = blocks[2]                           
			perform = '/bin/bash $HOME/getAppPerf.sh ' + blocks[1] + ' ' + program
                        logPath = '$HOME/Log/' + blocks[1] 

			for i in range(int(cnt)):
				print '\n' + '#'*36
				print '#'*10 + str(i) + 'th TEST on ' + program + '#'*10
				revert2snapshot(vmPath)

				print '------- monitoring performance -----\n'
				runProgramInVM(perform, conf_noWait, vmPath)
				time.sleep(1)
                          
				print '------- starting test case   -------\n'
				runProgramInVM('/bin/bash $HOME/runApp.sh '+case, conf, vmPath)
				time.sleep(1)

				# print '------- cleaning -------------------'
				# # still need a clean here
				# runProgramInVM(clean_case, conf, vmPath)
				# runProgramInVM(clean_process, conf, vmPath)
				print '------- resulting ------------------\n'
				copyResultToHost(logPath, i, vmPath, blocks[1])
				time.sleep(1)


if __name__ == '__main__':
	Start(sys.argv[1],sys.argv[2],sys.argv[3])


